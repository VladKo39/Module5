'''
Перегрузка операторов."
Цель: применить знания о перегрузке арифметических операторов и операторов сравнения.
Задача "Нужно больше этажей":
Для решения этой задачи будем пользоваться решением к предыдущей задаче "Специальные методы класса".
Необходимо дополнить класс House следующими специальными методами:
__eq__(self, other) - должен возвращать True, если количество этажей одинаковое у self и у other.
Методы __lt__(<), __le__(<=), __gt__(>), __ge__(>=), __ne__(!=)
должны присутствовать в классе и возвращать результаты сравнения по соответствующим операторам.
Как и в методе __eq__ в сравнении участвует кол-во этажей.
__add__(self, value) - увеличивает кол-во этажей на переданное значение value, возвращает сам объект self.
__radd__(self, value), __iadd__(self, value) - работают так же как и __add__ (возвращают результат его вызова).
Остальные методы арифметических операторов, где self - x, other - y:

Файл module_5_3.py и загрузите его на ваш GitHub репозиторий. В решении пришлите ссылку на него.
'''
#Создаю класс House
class House:
    #Методом __init__ инициализирую атрибуты объекта(переменные) House:
    #Наименование объекта как name
    #Количество этажей как number_of_floors
    def __init__(self,name, number_of_floors):
        self.name = name
        self.number_of_floors= number_of_floors
    ##метод(фуркция) __str__ возвращает строковое значение Названия объекта и  кол-во этажей объекта
    def __str__(self):
        return (f'Название: {self.name}, кол-во этажей: {self.number_of_floors}')
    ##метод(функция) __eq__(==) возвращает булев тип
    #   если количество этажей объекта равно кол-ву этажей объекта сравнения
    def __eq__(self, other):
        if isinstance(other, House):
            return (f'Cравнениe кол-ва этажей:\n'
                f' {self.name}({self.number_of_floors}) = "{other.name}({other.number_of_floors})\n\t'
                f' Результат: {self.number_of_floors==other.number_of_floors}')
    ##метод(функция) __lt__(<) возвращает булев тип
    #   если количество этажей объекта меньше кол-ва этажей объекта сравнения
    def __lt__(self, other):
        if isinstance(other, House):
            return (f'Cравнениe кол-ва этажей:\n'
                    f' {self.name}({self.number_of_floors}) < "{other.name}({other.number_of_floors})\n\t'
                    f' Результат: {self.number_of_floors < other.number_of_floors}')
    ##метод(функция) __le__(<=) возвращает булев тип
    #       если количество этажей объекта меньше или равно кол-ву этажей объекта сравнения
    def __le__(self, other):
        if isinstance(other, House):
            return (f'Cравнениe кол-ва этажей:\n'
                    f' {self.name}({self.number_of_floors}) <= "{other.name}({other.number_of_floors})\n\t'
                    f' Результат: {self.number_of_floors <= other.number_of_floors}')
    ##метод(функция) __gt__(>) возвращает булев тип
    #   если количество этажей объекта больше кол-ва этажей объекта сравнения
    def __gt__(self, other):
       if isinstance(other, House):
           return (f'Cравнениe кол-ва этажей:\n'
                        f' {self.name}({self.number_of_floors}) > "{other.name}({other.number_of_floors})\n\t'
                        f' Результат: {self.number_of_floors > other.number_of_floors}')
    #метод(функция) __ge__(>=) возвращает булев тип
    #     если количество этажей объекта больше или равно кол-ву этажей объекта сравнения
    def __ge__(self, other):
        if isinstance(other, House):
            return (f'Cравнениe кол-ва этажей:\n'
                    f' {self.name}({self.number_of_floors}) >= "{other.name}({other.number_of_floors})\n\t'
                    f' Результат: {self.number_of_floors >= other.number_of_floors}')

    #метод(функция) __ne__(!=) возвращает булев тип
    #     если количество этажей объекта не равно кол-ву этажей объекта сравнения
    def __ne__(self, other):
        if isinstance(other, House):
            return (f'Cравнениe кол-ва этажей:\n'
                    f' {self.name}({self.number_of_floors}) != "{other.name}({other.number_of_floors})\n\t'
                    f' Результат: {self.number_of_floors != other.number_of_floors}')

    #метод(функция) __add__ - увеличивает кол-во этажей на переданное значение, возвращает сам объект
    #  к объекту слева прибавляем правое значение
    def __add__(self,value):
        if isinstance(value, int):
            self.number_of_floors=self.number_of_floors+ value
            return self
    #метод(функция) __iadd__ - увеличивает кол-во этажей на переданное значение, возвращает сам объект
    # к объекту слева добавили правое значение и присвоили значение(_iadd_)
    def __iadd__(self,value):
        if isinstance(value, int):
            self.number_of_floors+= value
            return self
    # метод(функция) __radd__ - увеличивает кол-во этажей на переданное значение, возвращает сам объект
    #  к объекту справа прибавляем левое значение
    def __radd__(self,value):
        if isinstance(value,int):
            self.number_of_floors=value+self.number_of_floors
            return self


h1 = House('ЖК Эльбрус', 10)
h2 = House('ЖК Акация', 20)

#Вывод консоль: Название, кол-во этажей(__str__)
print(h1)
print(h2)

#Вывод консоль: Сравнение количество этажей объекта равно кол-ву этажей объекта сравнения(__eq__)
print(h1==h2)

#Вывод консоль: к количеству этажей объекта добавили 10 этажей (_add_) к объекту слева добавили правое значение
h1 = h1 + 10
#Вывод консоль: Объект, кол-во этажей(__str__)
print(h1)
#Вывод консоль: Сравнение количество этажей объекта равно кол-ву этажей объекта сравнения(__eq__)
print(h1 == h2)

#Вывод консоль: к количеству этажей объекта добавили 10 этажей и присвоили значение(_iadd_)
#               к объекту слева добавили правое значение
h1 +=10
#Вывод консоль: Объект, кол-во этажей(__str__)
print(h1)

#Вывод консоль: к количеству этажей объекта добавили 10 этажей и присвоили значение(_radd_)
#               к объекту справа добавили левое значение
h2 = 10 + h2 # __radd__
#Вывод консоль: Объект сравнения, кол-во этажей(__str__)
print(h2)
#Вывод консоль: количество этажей объекта > кол-ва этажей объекта сравнения(__gt__)
print(h1 > h2)
#Вывод консоль: количество этажей объекта >= кол-ва этажей объекта сравнения(__ge__)
print(h1 >= h2)
#Вывод консоль: количество этажей объекта > кол-ва этажей объекта сравнения(__lt__)
print(h1 < h2)
#Вывод консоль: количество этажей объекта >= кол-ва этажей объекта сравнения(__le__)
print(h1 <= h2)
#Вывод консоль: количество этажей объекта не равно кол-ву этажей объекта сравнения(__ne__)
print(h1 != h2)
